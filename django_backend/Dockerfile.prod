###########
# BUILDER #
###########

# pull official base image
FROM python:3.9 as builder

# set work directory
WORKDIR /usr/src/django_backend

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update && apt-get install python3-dev default-libmysqlclient-dev gcc netcat -y

# lint
#RUN pip install --upgrade pip
#RUN pip install flake8==3.9.2
#COPY . .
#RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements ./requirements
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/django_backend/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.9

# create directory for the app user
RUN mkdir -p /home/django_backend

# create the app user
RUN adduser  django_backend
#RUN addgroup -S django_backend && adduser -S django_backend -G django_backend

# create the appropriate directories
ENV HOME=/home/django_backend
ENV APP_HOME=/home/django_backend/web
RUN mkdir $APP_HOME
#RUN mkdir $APP_HOME/staticfiles
#RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install python3-dev default-libmysqlclient-dev gcc netcat -y
COPY --from=builder /usr/src/django_backend/wheels /wheels
COPY --from=builder /usr/src/django_backend/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the django_backend user
RUN chown -R django_backend:django_backend $APP_HOME

# change to the app user
USER django_backend

# run entrypoint.prod.sh
ENTRYPOINT ["/home/django_backend/web/entrypoint.prod.sh"]
